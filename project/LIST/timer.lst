C51 COMPILER V9.60.0.0   TIMER                                                             05/28/2020 11:02:34 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE TIMER
OBJECT MODULE PLACED IN ..\hex\timer.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\user\timer.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\user) DEBUG OBJ
                    -ECTEXTEND PRINT(.\LIST\timer.lst) TABS(2) OBJECT(..\hex\timer.obj)

line level    source

   1          /*                        -- 渡河蚂蚁电子工作室 --                        */
   2          /*
   3          *   说    明: STC8A8KS4A12 DEMO程序
   4          *   开发平台: STC15W408S     
   5          *   淘宝网店: 
   6          *
   7          //  文件名：main.c                                                              
   8          //  说明：供客户测试模块通信使用程序                                                                  
   9          //  编写人员：Duhemayi                                                                   
  10          //  编写日期：2018-09-16                                                               
  11          //  程序维护：
  12          //  维护记录：
  13          //  版    本: V1.0
  14          //                                                          
  15          // 免责声明：该程序仅用于学习与交流 
  16          // (c) Duhemayi Corporation. All rights reserved.     
  17          ******************************************************************************/
  18          #include "timer.h"
  19          
  20          //测试工作频率为11.0592MHz
  21          uint16 Timer_CNT;
  22          
  23          //void Timer0_Init(void)
  24          //{
  25          //    TMOD = 0x00;                                //模式0
  26          //    TL0 = 0x66;                                 //65536-11.0592M/12/1000  定时1ms
  27          //    TH0 = 0xfc;
  28          //    TR0 = 1;                                    //启动定时器
  29          //    ET0 = 1;                                    //使能定时器中断
  30          //    EA = 1;
  31          //}
  32          
  33          void Timer0_Init(void)    //10000??@24.000MHz
  34          {
  35   1        AUXR &= 0x7F;   //?????12T??
  36   1      //  TMOD &= 0xF0;   //???????
  37   1        TMOD = 0x00;
  38   1      //  TL0 = 0xE0;   //??????
  39   1      //  TH0 = 0xB1;   //??????  10ms
  40   1        TL0 = 0xA0;   //??????
  41   1        TH0 = 0x15;   //?????? 30ms
  42   1        
  43   1        ET0 = 1;  
  44   1        TF0 = 0;    //??TF0??
  45   1        TR0 = 0;    //---off-----???0????
  46   1      }
  47          
  48          
  49          void TM0_Isr() interrupt 1 using 1
  50          {
  51   1        TF0 = 0;
  52   1        TR0 = 0;
  53   1      
  54   1        //UartSend(Uart1_Rx);
C51 COMPILER V9.60.0.0   TIMER                                                             05/28/2020 11:02:34 PAGE 2   

  55   1        Uart1_Rx =0 ;
  56   1        
  57   1        //LED = !LED;
  58   1        
  59   1        //Timer0_Init();
  60   1        //TR0 = 1;                       
  61   1      }
  62          
  63          //void TM0_Isr() interrupt 1 using 1
  64          //{
  65          //  Timer_CNT++;
  66          //  if(Timer_CNT >= 5)
  67          //  {
  68          //    Timer_CNT = 0;
  69          //    LED = !LED;      //测试端口
  70          //  }                         
  71          //}
  72          
  73          
  74          void TM1_Isr() interrupt 3 using 1
  75          {
  76   1          Timer_CNT++;
  77   1        if(Timer_CNT >= 500)
  78   1        {
  79   2          Timer_CNT = 0;
  80   2          LED = !LED;      //测试端口
  81   2        }                                  
  82   1      }
  83          
  84          void Timer1_Init(void)
  85          {
  86   1          TMOD = 0x00;                                //模式0
  87   1          TL1 = 0x66;                                 //65536-11.0592M/12/1000
  88   1          TH1 = 0xfc;
  89   1          TR1 = 1;                                    //启动定时器
  90   1          ET1 = 1;                                    //使能定时器中断
  91   1          EA = 1;
  92   1      }
  93          
  94          
  95          void TM2_Isr() interrupt 12 using 1
  96          {
  97   1          AUXINTIF &= ~T2IF;                          //清中断标志
  98   1        Timer_CNT++;
  99   1        if(Timer_CNT >= 300)
 100   1        {
 101   2          Timer_CNT = 0;
 102   2          LED = !LED;      //测试端口
 103   2        } 
 104   1      }
 105          
 106          void Timer2_Init(void)
 107          {
 108   1          T2L = 0x66;                                 //65536-11.0592M/12/1000
 109   1          T2H = 0xfc;
 110   1          AUXR = 0x10;                                //启动定时器
 111   1          IE2 = ET2;                                  //使能定时器中断
 112   1          EA = 1;
 113   1      }
 114          
 115          void TM3_Isr() interrupt 19 using 1
 116          {
C51 COMPILER V9.60.0.0   TIMER                                                             05/28/2020 11:02:34 PAGE 3   

 117   1          AUXINTIF &= ~T3IF;                          //清中断标志
 118   1      
 119   1        Timer_CNT++;
 120   1        if(Timer_CNT >= 700)
 121   1        {
 122   2          Timer_CNT = 0;
 123   2          LED = !LED;      //测试端口
 124   2        }
 125   1      }
 126          
 127          void Timer3_Init(void)
 128          {
 129   1          T3L = 0x66;                                 //65536-11.0592M/12/1000
 130   1          T3H = 0xfc;
 131   1          T4T3M = 0x08;                               //启动定时器
 132   1          IE2 = ET3;                                  //使能定时器中断
 133   1          EA = 1;
 134   1      }
 135          
 136          void TM4_Isr() interrupt 20 using 1
 137          {                                //测试端口
 138   1          AUXINTIF &= ~T4IF;                          //清中断标志
 139   1        Timer_CNT++;
 140   1        if(Timer_CNT >= 1000)
 141   1        {
 142   2          Timer_CNT = 0;
 143   2          LED = !LED;      //测试端口
 144   2        }
 145   1      }
 146          
 147          void Timer4_Init(void)
 148          {
 149   1          T4L = 0x66;                                 //65536-11.0592M/12/1000
 150   1          T4H = 0xfc;
 151   1          T4T3M = 0x80;                               //启动定时器
 152   1          IE2 = ET4;                                  //使能定时器中断
 153   1          EA = 1;
 154   1      }
 155          
 156          
 157          
 158          
 159          
 160          
 161          
 162          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    383    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      2       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
