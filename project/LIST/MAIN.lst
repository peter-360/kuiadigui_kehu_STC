C51 COMPILER V9.60.0.0   MAIN                                                              05/28/2020 11:21:08 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\hex\MAIN.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\user\MAIN.C LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\user) DEBUG OBJE
                    -CTEXTEND PRINT(.\LIST\MAIN.lst) TABS(2) OBJECT(..\hex\MAIN.obj)

line level    source

   1          /*                        -- ¶ÉºÓÂìÒÏµç×Ó¹¤×÷ÊÒ --                        */
   2          /*
   3          *   Ëµ    Ã÷: STC8A8KS4A12 DEMO³ÌÐò
   4          *   ¿ª·¢Æ½Ì¨: STC15W408S     
   5          *   ÌÔ±¦Íøµê: 
   6          *
   7          //  ÎÄ¼þÃû£ºmain.c                                                              
   8          //  ËµÃ÷£º¹©¿Í»§²âÊÔÄ£¿éÍ¨ÐÅÊ¹ÓÃ³ÌÐò                                                                  
   9          //  ±àÐ´ÈËÔ±£ºDuhemayi                                                                   
  10          //  ±àÐ´ÈÕÆÚ£º2018-09-16                                                               
  11          //  ³ÌÐòÎ¬»¤£º
  12          //  Î¬»¤¼ÇÂ¼£º
  13          //  °æ    ±¾: V1.0
  14          //                                                          
  15          // ÃâÔðÉùÃ÷£º¸Ã³ÌÐò½öÓÃÓÚÑ§Ï°Óë½»Á÷ 
  16          // (c) Duhemayi Corporation. All rights reserved.     
  17          ******************************************************************************/
  18          #include "config.h"
  19          
  20          
  21          
  22          
  23          
  24          
  25          
  26          void spear_uart_send_datas(uint8* str, uint8 len)
  27          {
  28   1        while(len--)
  29   1        {
  30   2      //    USART_SendData(USART1, *str);
  31   2      //    while (USART_GetFlagStatus(USART1, USART_FLAG_TC) == RESET); 
  32   2      //    str++;
  33   2          UartSend(*str++);
  34   2        }
  35   1      }
  36          
  37          void debug_uart_send_datas(uint8* str, uint8 len)
  38          {
  39   1        UartSend(0xee);
  40   1        while(len--)
  41   1        {
  42   2      //    USART_SendData(USART1, *str);
  43   2      //    while (USART_GetFlagStatus(USART1, USART_FLAG_TC) == RESET); 
  44   2      //    str++;
  45   2          UartSend(*str++);
  46   2        }
  47   1        UartSend(0xff);
  48   1      }
  49          
  50          
  51          
  52          
  53          ///command struct
  54          typedef struct
C51 COMPILER V9.60.0.0   MAIN                                                              05/28/2020 11:21:08 PAGE 2   

  55          {
  56            //uint8_t type;
  57            uint8_t opcode;
  58            
  59            uint8_t board_addr;
  60            uint8_t lock_addr;//-------
  61            uint8_t gu_ding;//---
  62            
  63            uint8_t bcc;
  64          }command1_struct;
  65          
  66          /////start process the data in
  67          
  68          command1_struct m_data;
  69          
  70          
  71          uint8_t ComputXor(uint8_t *InData, uint16_t Len)
  72          {
  73   1        uint8_t Sum = 0;
  74   1        uint16_t i;
  75   1        for(i = 0; i < Len; i++)
  76   1        {
  77   2          Sum ^= InData[i]; 
  78   2        }
  79   1        return Sum;
  80   1      }
  81          
  82          void data_parse()
  83          {
  84   1        uint8_t bcc_temp;
  85   1        uint8_t tx_Buffer[256]={0};        //?????
  86   1        //uint8_t length = 0;             //??
  87   1        uint8_t gpio_level=0;
  88   1        uint8_t grp_level_1;
  89   1        uint8_t grp_level_2;
  90   1        uint8_t grp_level_3;
  91   1        uint8_t board_addr;
  92   1        
  93   1        uint8_t Uart1_Buffer_T[256]={0};        //?????
  94   1        uint8_t Uart1_Rx_T = 0;             //??
  95   1        
  96   1        uint8_t DSW_T_1, DSW_T_2, DSW_T_3, DSW_T_4, DSW_T_5, DSW_T_6 ;
  97   1        
  98   1        //SEGGER_RTT_printf(0, "-parse-Uart1_Rx = %d\n",Uart1_Rx);      //RTT´òÓ¡
  99   1        Uart1_Rx_T = Uart1_Rx - 8;
 100   1        //SEGGER_RTT_printf(0, "-Uart1_Rx_T = %d\n",Uart1_Rx_T);      //RTT´òÓ
 101   1        memcpy(Uart1_Buffer_T,Uart1_Buffer+4,Uart1_Rx_T);
 102   1        
 103   1        DSW_T_1 = ~DSW_1;
 104   1        DSW_T_2 = ~DSW_2;
 105   1        DSW_T_3 = ~DSW_3;
 106   1        DSW_T_4 = ~DSW_4;
 107   1        DSW_T_5 = ~DSW_5;
 108   1        DSW_T_6 = ~DSW_6;
 109   1        board_addr= DSW_T_1 | (DSW_T_2<<1) | (DSW_T_3<<2) | (DSW_T_4<<3) | (DSW_T_5<<4) | (DSW_T_6<<5) ;
 110   1        
 111   1        //UartSend(board_addr);
 112   1        if(board_addr == Uart1_Buffer_T[1])//todo
 113   1        {
 114   2          if(5==Uart1_Rx_T)
 115   2          {
 116   3            m_data.opcode = Uart1_Buffer_T[0];
C51 COMPILER V9.60.0.0   MAIN                                                              05/28/2020 11:21:08 PAGE 3   

 117   3            m_data.board_addr = Uart1_Buffer_T[1];// to do
 118   3            m_data.lock_addr = Uart1_Buffer_T[2];//
 119   3            m_data.gu_ding = Uart1_Buffer_T[3];//
 120   3            m_data.bcc = Uart1_Buffer_T[4];
 121   3      
 122   3            bcc_temp = ComputXor(Uart1_Buffer_T,4);
 123   3            //SEGGER_RTT_printf(0, "bcc_temp = %x\n",bcc_temp);
 124   3            if(bcc_temp == m_data.bcc)
 125   3            {
 126   4              switch(m_data.opcode)
 127   4              {
 128   5                case 0x8A:
 129   5                  //----1------
 130   5                  if(m_data.gu_ding  == 0x11)//process
 131   5                  {
 132   6                    switch(m_data.lock_addr)
 133   6                    {     
 134   7                      case 1:
 135   7      //                  GO_1=1;           //open
 136   7      //                  delay_ms(20);  
 137   7      //                  GO_1=0;           //close
 138   7      //                  delay_ms(20);  
 139   7                        
 140   7                      
 141   7                      
 142   7                      
 143   7                        GO_1=1;
 144   7                        //GI_1=1;
 145   7                      
 146   7                        GO_2=1;
 147   7                        //GI_2=1;
 148   7                      
 149   7                        GO_3=1;
 150   7                        //GI_3=1;
 151   7                      
 152   7                        GO_4=1;
 153   7                        //GI_4=1;
 154   7                        
 155   7                        GO_5=1;
 156   7                        //GI_5=1;
 157   7                        
 158   7                        GO_6=1;
 159   7                        //GI_6=1;
 160   7                        
 161   7                        GO_7=1;
 162   7                        //GI_7=1;
 163   7                        
 164   7                        GO_8=1;
 165   7                        //GI_8=1;
 166   7                        
 167   7                        GO_9=1;
 168   7                        //GI_9=1;
 169   7                        
 170   7                        GO_10=1;
 171   7                        //GI_10=1;
 172   7                        
 173   7                        GO_11=1;
 174   7                        //GI_11=1;
 175   7                      
 176   7                        GO_12=1;
 177   7                        //GI_12=1;
 178   7                      
C51 COMPILER V9.60.0.0   MAIN                                                              05/28/2020 11:21:08 PAGE 4   

 179   7                        GO_13=1;
 180   7                        //GI_13=1;
 181   7                      
 182   7                        GO_14=1;
 183   7                        //GI_14=1;
 184   7                        
 185   7                        GO_15=1;
 186   7                        //GI_15=1;
 187   7                        
 188   7                        GO_16=1;
 189   7                        //GI_16=1;
 190   7                        
 191   7                        GO_17=1;
 192   7                        //GI_17=1;
 193   7                        
 194   7                        GO_18=1;
 195   7                        //GI_18=1;
 196   7                        
 197   7                        GO_19=1;
 198   7                        //GI_19=1;
 199   7                        
 200   7                        GO_20=1;
 201   7                        //GI_20=1;
 202   7                        
 203   7                        GO_21=1;
 204   7                        //GI_21=1;
 205   7                      
 206   7                        GO_22=1;
 207   7                        //GI_22=1;
 208   7                      
 209   7                        GO_23=1;
 210   7                        //GI_23=1;
 211   7                      
 212   7                        GO_24=1;
 213   7                        //GI_24=1;
 214   7                        
 215   7                        delay_ms(20);  
 216   7                        
 217   7                        GO_1=0;
 218   7                        //GI_1=0;
 219   7                        
 220   7                        GO_2=0;
 221   7                        //GI_2=0;
 222   7                      
 223   7                        GO_3=0;
 224   7                        //GI_3=0;
 225   7      
 226   7                              
 227   7                        GO_4=0;
 228   7                        //GI_4=0;
 229   7                        
 230   7                        GO_5=0;
 231   7                        //GI_5=0;
 232   7                        
 233   7                        GO_6=0;
 234   7                        //GI_6=0;
 235   7                        
 236   7                        GO_7=0;
 237   7                        //GI_7=0;
 238   7                        
 239   7                        GO_8=0;
 240   7                        //GI_8=0;
C51 COMPILER V9.60.0.0   MAIN                                                              05/28/2020 11:21:08 PAGE 5   

 241   7                        
 242   7                        GO_9=0;
 243   7                        //GI_9=0;
 244   7                        
 245   7                        GO_10=0;
 246   7                        //GI_10=0;
 247   7                        
 248   7                        GO_11=0;
 249   7                        //GI_11=0;
 250   7                      
 251   7                        GO_12=0;
 252   7                        //GI_12=0;
 253   7                      
 254   7                        GO_13=0;
 255   7                        //GI_13=0;
 256   7                      
 257   7                        GO_14=0;
 258   7                        //GI_14=0;
 259   7                        
 260   7                        GO_15=0;
 261   7                        //GI_15=0;
 262   7                        
 263   7                        GO_16=0;
 264   7                        //GI_16=0;
 265   7                        
 266   7                        GO_17=0;
 267   7                        //GI_17=0;
 268   7                        
 269   7                        GO_18=0;
 270   7                        //GI_18=0;
 271   7                        
 272   7                        GO_19=0;
 273   7                        //GI_19=0;
 274   7                        
 275   7                        GO_20=0;
 276   7                        //GI_20=0;
 277   7                        
 278   7                        GO_21=0;
 279   7                        //GI_21=0;
 280   7                      
 281   7                        GO_22=0;
 282   7                        //GI_22=0;
 283   7                    
 284   7                        GO_23=0;
 285   7                        //GI_23=0;
 286   7                      
 287   7                        GO_24=0;
 288   7                        //GI_24=0;  
 289   7                      
 290   7                      
 291   7      
 292   7                        //LED1 =1;
 293   7                        gpio_level = 0x01;
 294   7                        //gpio_level= GI_1;
 295   7                        //SEGGER_RTT_printf(0, "%d:gpio_level = %x\n",m_data.lock_addr,gpio_level);
 296   7                        UartSendStr("\r\n--1--\r\n");
 297   7                        break;
 298   7                      
 299   7                      case 2:
 300   7                        GO_2=1;              //open
 301   7                        delay_ms(20);  
 302   7                        GO_2=0;              //close
C51 COMPILER V9.60.0.0   MAIN                                                              05/28/2020 11:21:08 PAGE 6   

 303   7                        delay_ms(20);
 304   7      
 305   7      
 306   7                        //LED1 =0;
 307   7                        //gpio_level= GI_2;
 308   7                        gpio_level = 0x01;
 309   7                        //SEGGER_RTT_printf(0, "%d:gpio_level = %x\n",m_data.lock_addr,gpio_level);
 310   7                        UartSendStr("\r\n--2--\r\n");
 311   7                        break;
 312   7                      
 313   7                      
 314   7                      case 3:
 315   7                  
 316   7                        GO_3=1;           //open
 317   7                        delay_ms(20);  
 318   7                        GO_3=0;           //close
 319   7                        delay_ms(20);  
 320   7      
 321   7                        gpio_level = 0x01;
 322   7                        //gpio_level= GI_3;
 323   7                        //SEGGER_RTT_printf(0, "%d:gpio_level = %x\n",m_data.lock_addr,gpio_level);
 324   7                        UartSendStr("\r\n--3--\r\n");
 325   7                        break;
 326   7                      
 327   7                      default:
 328   7                        break;
 329   7      
 330   7                    }
 331   6                    
 332   6                    memcpy(tx_Buffer,"star",4);
 333   6                    tx_Buffer[4]= m_data.opcode;
 334   6                    tx_Buffer[5]= m_data.board_addr;
 335   6                    tx_Buffer[6]= m_data.lock_addr;
 336   6                    
 337   6                    if(0x01 == gpio_level)
 338   6                      tx_Buffer[7]= 0x11;//lock state todo open
 339   6                    else
 340   6                      tx_Buffer[7]= 0x00;//lock state todo close
 341   6                    
 342   6                    bcc_temp = ComputXor(tx_Buffer+4,4);
 343   6                    tx_Buffer[8]= bcc_temp;
 344   6                    memcpy(tx_Buffer+9,"end",3);
 345   6                    
 346   6                    tx_Buffer[12]='\0';
 347   6                    
 348   6                    spear_uart_send_datas(tx_Buffer,12);
 349   6      //              spear_rtt_send_datas(tx_Buffer,12);
 350   6      
 351   6                    //SEGGER_RTT_printf(0, "ok,m_data.opcode=%02x\n",m_data.opcode);
 352   6                  }
 353   5                  else
 354   5                  {
 355   6                    //SEGGER_RTT_printf(0, "error-2,m_data.opcode=%02x\n",m_data.opcode);
 356   6                  }
 357   5                  break;
 358   5                  
 359   5      
 360   5                default:
 361   5                  break;
 362   5              }
 363   4              
 364   4              //SEGGER_RTT_printf(0, "m_data.bcc = %x\n",m_data.bcc);
C51 COMPILER V9.60.0.0   MAIN                                                              05/28/2020 11:21:08 PAGE 7   

 365   4            }
 366   3            else
 367   3            {
 368   4              //SEGGER_RTT_printf(0, "error-1-m_data.bcc = %x\n",m_data.bcc);
 369   4            }
 370   3            
 371   3          }
 372   2          
 373   2          
 374   2          
 375   2        }
 376   1      
 377   1      }
*** WARNING C280 IN LINE 88 OF ..\user\MAIN.C: 'grp_level_1': unreferenced local variable
*** WARNING C280 IN LINE 89 OF ..\user\MAIN.C: 'grp_level_2': unreferenced local variable
*** WARNING C280 IN LINE 90 OF ..\user\MAIN.C: 'grp_level_3': unreferenced local variable
 378          
 379          
 380          
 381          
 382          /******************************************************************************/
 383          // º¯ÊýÃû³Æ£ºmain 
 384          // ÊäÈë²ÎÊý£º 
 385          // Êä³ö²ÎÊý£º 
 386          // º¯Êý¹¦ÄÜ£º 
 387          /******************************************************************************/
 388          void main(void)
 389          {
 390   1      //  uint16 ADC_RES;
 391   1          
 392   1        Uart1Init();
 393   1      //  Timer4_Init();
 394   1        Timer0_Init();
 395   1        ES = 1;
 396   1        EA = 1;
 397   1      //  Read_ID_fromROM();  
 398   1      ////  ADC_Init();
 399   1      //  PWM0_INIT();
 400   1      //  PCA_INIT();
 401   1        
 402   1        P1M0 = 0x6F;                                //??P1.0~P1.7???????
 403   1        P1M1 = 0x00;
 404   1      
 405   1        P2M0 = 0x66;                                //
 406   1        P2M1 = 0x00;
 407   1        
 408   1        P3M0 = 0x18;                                //
 409   1        P3M1 = 0x00;
 410   1        
 411   1        P4M0 = 0x03;                                //
 412   1        P4M1 = 0x00;
 413   1        
 414   1        P5M0 = 0x2F;                                //
 415   1        P5M1 = 0x00;
 416   1        
 417   1        P6M0 = 0x8C;                                //
 418   1        P6M1 = 0x00;
 419   1        
 420   1        P7M0 = 0x09;                                //
 421   1        P7M1 = 0x00;
 422   1      
 423   1        GO_1=0;
C51 COMPILER V9.60.0.0   MAIN                                                              05/28/2020 11:21:08 PAGE 8   

 424   1        //GI_1=0;
 425   1        
 426   1        GO_2=0;
 427   1        //GI_2=0;
 428   1      
 429   1        GO_3=0;
 430   1        //GI_3=0;
 431   1      
 432   1              
 433   1        GO_4=0;
 434   1        //GI_4=0;
 435   1        
 436   1        GO_5=0;
 437   1        //GI_5=0;
 438   1        
 439   1        GO_6=0;
 440   1        //GI_6=0;
 441   1        
 442   1        GO_7=0;
 443   1        //GI_7=0;
 444   1        
 445   1        GO_8=0;
 446   1        //GI_8=0;
 447   1        
 448   1        GO_9=0;
 449   1        //GI_9=0;
 450   1        
 451   1        GO_10=0;
 452   1        //GI_10=0;
 453   1        
 454   1        GO_11=0;
 455   1        //GI_11=0;
 456   1      
 457   1        GO_12=0;
 458   1        //GI_12=0;
 459   1      
 460   1        GO_13=0;
 461   1        //GI_13=0;
 462   1      
 463   1        GO_14=0;
 464   1        //GI_14=0;
 465   1        
 466   1        GO_15=0;
 467   1        //GI_15=0;
 468   1        
 469   1        GO_16=0;
 470   1        //GI_16=0;
 471   1        
 472   1        GO_17=0;
 473   1        //GI_17=0;
 474   1        
 475   1        GO_18=0;
 476   1        //GI_18=0;
 477   1        
 478   1        GO_19=0;
 479   1        //GI_19=0;
 480   1        
 481   1        GO_20=0;
 482   1        //GI_20=0;
 483   1        
 484   1        GO_21=0;
 485   1        //GI_21=0;
C51 COMPILER V9.60.0.0   MAIN                                                              05/28/2020 11:21:08 PAGE 9   

 486   1      
 487   1        GO_22=0;
 488   1        //GI_22=0;
 489   1      
 490   1        GO_23=0;
 491   1        //GI_23=0;
 492   1      
 493   1        GO_24=0;
 494   1        //GI_24=0;  
 495   1      
 496   1        
 497   1        RS485_RX_EN();
 498   1      
 499   1        UartSendStr("power on !!!\r\n");
 500   1        while(1)
 501   1        {
 502   2          if((1== packerflag))
 503   2          {
 504   3            RS485_TX_EN();
 505   3      
 506   3      //      SEGGER_RTT_printf(0, "\n");
 507   3      //      SEGGER_RTT_printf(0, "-main-Uart1_Rx = %d\n",Uart1_Rx);      //RTT´òÓ¡
 508   3      //      SEGGER_RTT_printf(0, "---rcv-datas---"); 
 509   3            //spear_rtt_send_datas(Uart1_Buffer,Uart1_Rx);
 510   3            
 511   3            //spear_uart_send_datas(Uart1_Buffer,Uart1_Rx); //debug
 512   3      
 513   3      
 514   3            data_parse();
 515   3            RS485_RX_EN();
 516   3            
 517   3            memset(Uart1_Buffer,0,13);//max =4+5+4 =13
 518   3            Uart1_Rx   = 0 ;
 519   3            packerflag = 0;
 520   3            //Uart1_index_flag_end =0;
 521   3          }
 522   2          
 523   2        
 524   2          
 525   2        }
 526   1      }
 527          
 528          
 529          
 530          
 531          
 532          //    LED1 = 0;
 533          ////    GO_1 = 0;
 534          //    Delay100ms();
 535          //    Delay100ms();
 536          //    Delay100ms();
 537          //    Delay100ms();
 538          //    Delay100ms();
 539          //    LED1 = 1;
 540          ////    GO_1 =1;
 541          //    Delay100ms();
 542          //    Delay100ms();
 543          //    Delay100ms();
 544          //    Delay100ms();
 545          //    Delay100ms();
 546          
 547          //    ADC_RES = Get_ADC_RES();
C51 COMPILER V9.60.0.0   MAIN                                                              05/28/2020 11:21:08 PAGE 10  

 548          //    UartSend(ADC_RES);
 549          //    ADC_RES = ADC_RES>>8;
 550          //    UartSend(ADC_RES>>8);
 551              
 552          
 553          //    UartSend(length);
 554          //    UartSend(length>>8);
 555          //    UartSend(length>>16);
 556          //    UartSend(length>>24);
 557          //    RS485_RX_EN();
 558          //    UartSendStr("Uart Test 2 -RX!\r\n");
 559          //    delay_ms(4000);
 560          //    
 561          //    RS485_TX_EN();
 562          //    UartSendStr("Uart Test 3 -TX!\r\n");//no xianshi
 563          //    delay_ms(2100);


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1013    ----
   CONSTANT SIZE    =    566    ----
   XDATA SIZE       =      5     536
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  3 WARNING(S),  0 ERROR(S)
